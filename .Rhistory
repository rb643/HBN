label.x = 0, label.y = 1, hjust = 0.005, vjust = 0.9)
ggarrange(p1, p2, ncol = 1, nrow = 2, labels = c("Von Economo","Mesulam"),
label.x = 0, label.y = 1, hjust = 0.005, vjust = 1.1)
ggarrange(p1, p2, ncol = 1, nrow = 2, labels = c("Von Economo","Mesulam"),
label.x = 0, label.y = 1, hjust = 0.002, vjust = 1.1)
cmap_ve2=c("#8B1C61", "#0000CF", "#01883D", "#EF9A01", "#FFFE01", "#01FFFF", "#FF00FE")
ggplot(df_cyto, aes(x = value, y = cyto, fill = cyto)) +
geom_density_ridges(alpha = 0.5)  +
scale_fill_manual(values = cmap_ve2) +
#scale_y_discrete(expand = c(0.01, 0)) +   # will generally have to set the `expand` option
#scale_x_continuous(expand = c(0, 0))  +
theme_minimal() +
labs(x = "", y = "Class") +
theme(legend.position = "none",
legend.title = element_blank()) +
facet_grid(~variable, scales = "free")
library(RColorBrewer)
library(ggplot2)
library(plyr)
library(ggpubr)
df <- read.csv('./Downloads//model_r2.csv', header = FALSE)
df <- rename(df, c("V1"="Rsquared"))
dm <- read.csv('./Downloads//model_mse.csv', header = FALSE)
df$mse <- dm$V1
df <- df[df$Rsquared>0,]
df$Rsquared <- as.numeric(as.character(df$Rsquared))
dd <- read.csv('./Downloads//combos.txt', header = FALSE)
df$names <- as.factor(dd$V1)
ggplot(data = df, aes(x = reorder(names, mse), y = mse, color = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_brewer(palette="Blues") +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_brewer(palette="Blues") +
theme_classic()
p1 <- ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_gradient(low = "#fff5ee", high = "#005f6a") +
theme_classic()
devtools::install_github("thomasp85/scico")
library(scico)
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "oslo") +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "devon") +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "devon", direction = 1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "devon", direction = 0) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "devon", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "oslo", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "davos", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "lapaz", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "devon", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "bamako", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "acton", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "imola", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "imola", direction = 1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "buda", direction = 1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "buda", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "tokyo", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "lajolla", direction = -1) +
theme_classic()
ggplot(data = df, aes(x = reorder(names, mse), y = mse, fill = Rsquared)) +
geom_col() +
coord_flip() +
scale_fill_scico(palette = "lajolla", direction = 1) +
theme_classic()
library(ggplot2)
df <- read.csv(file = './Desktop/anhedonia.csv', header = TRUE)
ggplot(data = df, aes(x=Outcome,y=coefficient)) +
geom_dotplot()
ggplot(data = df, aes(x=Outcome,y=Coefficient)) +
geom_dotplot()
ggplot(data = df, aes(x=Outcome,y=Coefficient)) +
geom_dotplot() +
labs(x = expression(G1["Dev"]), y = "Term") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, hjust = 1),
legend.title = element_blank()) +
coord_flip()
ggplot(data=df, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.65,0.8),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,R2), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.65,0.8),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.65,0.8),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.2,0.8),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.1),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
#geom_hline(yintercept=1, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
library(viridis)
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_fill_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('Discovery') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('PRS Association') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.title = "R^2",
legend.background = element_rect(fill=alpha('white',0.5)))
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('PRS Association') +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
getwd()
ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") + ggtitle('PRS Association') +
theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
df2 <- read.csv(file = './Desktop/anhedonia_FA.csv', header = TRUE)
df3 <- read.csv(file = './Desktop/anhedonia_MD.csv', header = TRUE)
PRS <- ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)")  +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
FA <- ggplot(data=df2, aes(x=reorderOutcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
MD <- ggplot(data=df3, aes(x=reorderOutcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
library(ggpubr)
ggarrange(PRS, FA, MD, ncol = 3, nrow = 1, labels = c("Regional Volume","FA","MD"))
FA <- ggplot(data=df2, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
MD <- ggplot(data=df3, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = c(0.8,0.2),
legend.background = element_rect(fill=alpha('white',0.5)))
ggarrange(PRS, FA, MD, ncol = 3, nrow = 1, labels = c("Regional Volume","FA","MD"))
Figure2 <- ggarrange(PRS, FA, MD, ncol = 3, nrow = 1, labels = c("Regional Volume","FA","MD"))
plot(Figure2)
dev.off()
plot(Figure2)
ggplot(data=df3, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = "bottom",
legend.background = element_rect(fill=alpha('white',0.5)))
PRS <- ggplot(data=df, aes(x=reorder(Outcome,Coefficient), y=Coefficient, ymin=Lower, ymax=Upper, color = R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)")  +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = "bottom",
legend.background = element_rect(fill=alpha('white',0.5)))
FA <- ggplot(data=df2, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = "bottom",
legend.background = element_rect(fill=alpha('white',0.5)))
MD <- ggplot(data=df3, aes(x=Outcome, y=Coefficient, ymin=Lower, ymax=Upper, color = Pseudo.R2)) +
geom_pointrange() +
scale_colour_viridis() +
geom_hline(yintercept=0, lty=2) +  # add a dotted line at x=1 after flip
coord_flip() +  # flip coordinates (puts labels on y axis)
ylab("Mean (95% CI)") +
#theme_minimal() +
theme(axis.title.y=element_blank(),
legend.position = "bottom",
legend.background = element_rect(fill=alpha('white',0.5)))
Figure2 <- ggarrange(PRS, FA, MD, ncol = 3, nrow = 1, labels = c("Regional Volume","FA","MD"))
plot(Figure2)
setwd("~/GitHub/HBN")
## setup
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
df <- read.csv('./Data/data-2019-10-26T14_33_12.929Z.csv')
head(df$Basic_Demos.Age)
df$Basic_Demos.Age <- as.numeric(as.character(df$Basic_Demos.Age))
head(df$Basic_Demos.Age)
df$age <- as.numeric(as.character(df$Basic_Demos.Age))
ggplot(data = df, aes(y = age, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Site") +
ylab("Euler Index") +
coord_flip() +
theme_cowplot() +
facet_wrap(~variable)
ggplot(data = df, aes(y = age, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Site") +
ylab("Euler Index") +
coord_flip() +
theme_cowplot()
ggplot(data = df, aes(y = age, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot()
names(df)
class(df$Physical.BMI)
df$bmi <- as.numeric(as.character(df$Physical.BMI))
ggplot(data = df, aes(y = bmi, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = bmi), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot()
df <- df[!(is.na(df$age) | df$age==""), ]
df <- df[!(is.na(df$bmi) | df$bmi==""), ]
ggplot(data = df, aes(y = age, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot()
age <- ggplot(data = df, aes(y = age, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot()
bmi <- ggplot(data = df, aes(y = bmi, x = Basic_Demos.Sex, fill = Basic_Demos.Sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = bmi), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("BMI") +
coord_flip() +
theme_cowplot()
ggarrange(age,bmi,ncol=2)
head(df$Physical.BMI_Range)
getwd()
df <- read.csv('~/Downloads/data-2019-10-24T12_15_57.565Z.csv')
files <- read.csv('./Data/files_complete.txt', header = F)
df$Basic_Demos.EID[1:10]
colnames(files) <- c("Site","ID")
df$ID <- paste("sub-",df$Basic_Demos.EID,sep="")
df$ID[1:10]
df2 <- merge(df, files, by = ID)
df2 <- merge(df, files, by == ID)
df2 <- merge(df, files, by = "ID")
df2 <- df[files$ID %in% df$ID,]
df$ID <- as.factor(paste("sub-",df$Basic_Demos.EID,sep=""))
df2 <- df[files$ID %in% df$ID,]
df2 <- merge(df, files, by = "ID")
df2 <- merge(df, files, by = ID)
df2 <- merge(df, files, by == ID)
df2 <- merge(df, files, by == "ID")
df2 <- merge(df, files, by = "ID")
df$ID
df$ID <- as.factor(paste(" sub-",df$Basic_Demos.EID,sep=""))
df2 <- merge(df, files, by = "ID")
write.csv(df2,file = './Data/DataSelect.csv')
View(df2)
