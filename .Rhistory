install.packages('nlme')
install.packages('phia')
setwd("/Data2/UKB")
inputfile <- 'UKB_Phenotype.csv'
##load the necescary libraries
require(data.table)
require(bit64)
require(dplyr)
##read the raw data
ukb <- fread(inputfile, header = T, sep = ',')
varlist <- 'sambiobankmeasures.txt'
ouputfile <- 'UKB_for_Sam2.csv'
mri_only <- FASLE
mri_only <- FALSE
extractVars <- function(inputfile, varlist, outputfile, mri_only, ...){
##load the necescary libraries
require(data.table)
require(bit64)
require(dplyr)
##read the raw data
ukb <- fread(inputfile, header = T, sep = ',')
if (mri_only == FALSE){
ukb <- ukb
} else if (mri_only == "T1"){
ukb <- subset(ukb,`20252-2.0`== "20252_2_0")
} else if (mri_only == "T2"){
ukb <- subset(ukb,`20253-2.0`== "20253_2_0")
} else if (mri_only == "rsfMRI") {
ukb <- subset(ukb,`20227-2.0`== "20227_2_0")
} else {
warning("No MR selection option recognized, using T1 only")
ukb <- subset(ukb,`20252-2.0`== "20252_2_0")
}
## load the list of variables
varlist <- fread(varlist, header = F)
colnames(varlist) <- "variables"
## match variable list to dataset
idx <- match(varlist$variables, names(ukb))
## extraxt data and add subject id
NewDf <- select(ukb,"eid",idx)
## return the new dataframe
return(NewDf)
}
extractVars(inputfile = inputfile, varlist = varlist, outputfile = outputfile, mri_only = FALSE)
varlist <- fread(varlist, header = F)
colnames(varlist) <- "variables"
## match variable list to dataset
idx <- match(varlist$variables, names(ukb))
## extraxt data and add subject id
NewDf <- select(ukb,"eid",idx)
idx
View(varlist)
extractVars(inputfile = inputfile, varlist = varlist, outputfile = outputfile, mri_only = FALSE)
varlist <- fread(varlist, header = F)
extractVars(inputfile = inputfile, varlist = 'sambiobankmeasures.txt', outputfile = outputfile, mri_only = FALSE)
newDF <- extractVars(inputfile = inputfile, varlist = 'sambiobankmeasures.txt', outputfile = outputfile, mri_only = FALSE)
csv.w
write.table(newDF, file = ouputfile, quote = FALSE, row.names = FALSE)
View(varlist)
setwd("~/Dropbox/Research/Projects/UKB/Scripts")
setwd("~/GitHub/ABCD")
## some default package installation
#install.packages('easypackages')
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
df <- read.table('./Data/abcddemo01.txt', header = TRUE)
View(df)
df <- read.table('./Data/abcddemo01.txt', header = TRUE)[-1]
df <- read.table('./Data/abcddemo01.txt', header = TRUE)[-1,]
View(df)
View(df)
df$age <- df$interview_age/12
df$age <- (df$interview_age)/12
df$age <- (df$interview_age) / 12
df$age <- as.numeric(df$interview_age) / 12
View(df)
df$age <- as.numeric(as.character(df$interview_age)) / 12
levels(df$sex)
ggplot(data = df, aes(y = age, x = sex, fill = sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = eulerLeft), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
theme_bw()
ggplot(data = df, aes(y = age, x = sex, fill = sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
theme_bw()
library(cowplot)
levels(df$sex)
View(df)
df <- df[!(is.na(df$age) | df$age==""), ]
df <- df[!(is.na(df$sex) | df$sex==""), ]
ggplot(data = df, aes(y = age, x = sex, fill = sex)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = age), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot()
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
# load some data, skip the first line as that is the descriptor
df <- read.table('./Data/abcddemo01.txt', header = TRUE)[-1,]
# get the age in years
df$age <- as.numeric(as.character(df$interview_age)) / 12
# remove empty rows
df <- df[!(is.na(df$age) | df$age==""), ]
df <- df[!(is.na(df$sex) | df$sex==""), ]
df <- read.table('./Data/abcd_ksad501.txt', header = TRUE)[-1,]
df$age <- as.numeric(as.character(df$interview_age)) / 12
df <- df[!(is.na(df$age) | df$age==""), ]
df <- df[!(is.na(df$sex) | df$sex==""), ]
numbers <- df %>% group_by(ksads_1_1_t) %>% dplyr::summarise(n = n())
View(numbers)
numbers <- df %>% group_by(ksads_1_2_t) %>% dplyr::summarise(n = n())
View(numbers)
View(numbers)
colnames(depr_present) <- c("Current Depressed Mood","N")
depr_present <- df %>% group_by(ksads_1_1_t) %>% dplyr::summarise(n = n())
depr_past <- df %>% group_by(ksads_1_2_t) %>% dplyr::summarise(n = n())
colnames(depr_present) <- c("Current Depressed Mood","N")
View(depr_present)
kable(depr_present, caption = "Number of subjects per state") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
View(df)
df <- df[!(is.na(df$ksads_1_1_t) | df$ksads_1_1_t==""), ]
View(df)
length(unique(df$subjectkey))
kable(list(depr_past, depr_present), caption = "") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
kable(list(depr_past, depr_present), caption = "")
kable(list(depr_past, depr_present), caption = "")
kable(list(depr_past, depr_present), caption = "")
dev.off()
kable(list(depr_past, depr_present), caption = "")
kable(list(depr_past, depr_present), caption = "") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"),position = "left", full_width = F)
depr_present <- df %>% group_by(ksads_1_1_t) %>% dplyr::summarise(n = n())
colnames(depr_present) <- c("Current Depressed Mood","N")
depr_past <- df %>% group_by(ksads_1_2_t) %>% dplyr::summarise(n = n())
colnames(depr_past) <- c("Past Depressed Mood","N")
anx_present <- df %>% group_by(ksads_8_301_t) %>% dplyr::summarise(n = n())
colnames(anx_present) <- c("Current Social Anxiety","N")
anx_past <- df %>% group_by(ksads_8_302_t) %>% dplyr::summarise(n = n())
colnames(anx_past) <- c("Past Social Anxiety","N")
kable(list(depr_past, depr_present, anx_past), caption = "") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"),position = "left", full_width = F)
knitr::kable(list(depr_past, depr_present, anx_past), caption = "") %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed"),position = "left", full_width = F)
df <- df[!(is.na(df$ksads_8_301_t) | df$ksads_8_301_t==""), ]
anx_present <- df %>% group_by(ksads_8_301_t) %>% dplyr::summarise(n = n())
colnames(anx_present) <- c("Current Social Anxiety","N")
anx_past <- df %>% group_by(ksads_8_302_t) %>% dplyr::summarise(n = n())
colnames(anx_past) <- c("Past Social Anxiety","N")
t1 <- kable(depr_present, caption = "") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
t2 <- kable(depr_past, caption = "") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
t3 <- kable(anx_present, caption = "") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
t4 <- kable(anx_past, caption = "") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "left", full_width = F)
cat(c('<table><tr valign="top"><td>', t1, '</td><td>', t2, '</td><tr></table>'),
sep = '')
df2 <- read.table('./Data/abcd_hsss01.txt', header = TRUE)
View(df2)
df2 <- df2[!(is.na(df2$hormone_scr_ert_rep2) | df2$hormone_scr_ert_rep2==""), ]
View(df2)
df2 <- read.table('./Data/abcd_hsss01.txt', header = TRUE)[-1,]
df2 <- df2[!(is.na(df2$hormone_scr_ert_rep2) | df2$hormone_scr_ert_rep2==""), ]
autism <- df %>% group_by(ksads_18_903_p) %>% dplyr::summarise(n = n())
df <- read.table('./Data/abcd_ksad01.txt', header = TRUE)[-1,]
df$age <- as.numeric(as.character(df$interview_age)) / 12
autism <- df %>% group_by(ksads_18_903_p) %>% dplyr::summarise(n = n())
View(autism)
df.main <- merge(df, df2, by = subjectkey)
df.main <- merge(df, df2, by = "subjectkey")
df.main <- merge(df, df2, by == subjectkey)
df.main <- merge(df, df2, by == "subjectkey")
df.main <- merge(df, df2, by = "subjectkey")
View(df.main)
df.main <- subset(df.main, df.main$eventname.x == "baseline_year_1_arm_1")
ggplot(data = df, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
ggplot(data = df.main, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
dev.off
dev.off()
ggplot(data = df.main, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
df.main <- df.main[!(is.na(df.main$sex) | df.main$sex==""), ]
df.main <- merge(df, df2, by = "subjectkey")
df.main <- subset(df.main, df.main$eventname.x == "baseline_year_1_arm_1")
df.main <- df.main[!(is.na(df.main$sex.x) | df.main$sex.x==""), ]
plot(df.main$hormone_scr_ert_rep2)
plot(as.numeric(as.character(df.main$hormone_scr_ert_rep2)))
df.main$hormone_scr_ert_rep2 <- (as.numeric(as.character(df.main$hormone_scr_ert_rep2)))
ggplot(data = df.main, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
levels(df.main$ksads_18_903_p)
df.main <- df.main[!(is.na(df.main$ksads_18_903_p) | df.main$ksads_18_903_p==""), ]
ggplot(data = df.main, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
ggplot(data = df.main, aes(y = hormone_scr_ert_rep2, x = ksads_18_903_p, fill = ksads_18_903_p)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = hormone_scr_ert_rep2), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Dx") +
ylab("Testosterone") +
coord_flip() +
theme_cowplot()
t.test(ksads_18_903_p~hormone_scr_ert_rep2,data = df.main)
levels(df.main$ksads_18_903_p)
x = subset(df.main, ksads_18_903_p == 0)
y = subset(df.main, ksads_18_903_p == 1)
t.test(x$hormone_scr_ert_rep2,y$hormone_scr_ert_rep2)
View(autism)
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
df <- read.table('./Data/mriqcrp202.txt', header = FALSE)
View(df)
df$age <- as.numeric(as.character(df$interview_age)) / 12
df$interview_age <- as.numeric(as.character(df$interview_age))
df <- read.table('./Data/mriqcrp202.txt', header = FALSE)[-1,]
df <- read.table('./Data/mriqcrp202.txt', TRUE = FALSE)[-1,]
df <- read.table('./Data/mriqcrp202.txt', header = T)[-1,]
levels(df$eventname)
df$age <- as.numeric(as.character(df$interview_age)) / 12
df$interview_age <- as.numeric(as.character(df$interview_age))
names(Df)
names(df)
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
# load the data
load("~/Dropbox/Research/Projects/UKB/Data/UKB_MRI_Only_v2.RData")
sample <- subset(ukb_mri_only, eid == "1136125")
View(sample)
sample$`21001-0.0`
sample$`21001-1.0`
sample$`21001-2.0`
sample$`21003-2.0`
sample2 <- subset(ukb_mri_only, eid == "1149839")
sample2$`21001-2.0`
sample2$`21003-2.0`
sample2$`189-0.0`
sample2$`738-0.0`
sample2$`738-0.1`
sample2$`738-1.0`
sample2$`738-2.0`
sample2$`31-0.0`
sample$`189-0.0`
sample$`738-0.1`
sample$`738-1.0`
sample$`738-2.0`
sample3 <- subset(ukb_mri_only, eid == "1000028")
sample2$eid
sample$eid
sample2$eid
sample2$`21003-0.0`
sample$`21003-0.0`
sample$`21003-1.0`
sample$`21003-2.0`
setwd("~/GitHub/HBN")
## setup
rm(list = ls()) # clear the workspace
library(easypackages) # then we can do the rest in one go
# get a list of all potentially useful packages
list.of.packages <- c("Hmisc","ggplot2","caret","gplots","Rmisc","dplyr",
"MatchIt","optmatch","data.table","plotrix","ggthemes", "knitr",
"viridis","coin","plyr","psytabs","RColorBrewer","boot", "kableExtra",
"msir","lmtest", "ggpubr","stats", "reshape2","xtable",
"ez","apa","parallel", "jmuOutlier","Rtsne","fpc", "cluster",
"RCurl","nlme","foreach","doParallel", "gridExtra","cowplot")
source("https://bit.ly/2q4XQ66")
# check if they are already installed and otherwise install them
# note: this doesn't work for biocLite tools
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) { install.packages(new.packages)}
# then load them all
libraries(list.of.packages)
rm(list.of.packages, new.packages)
## load some data
files <- list.dirs('./Data/')
## load some data
files <- list.dirs('./Data/*.csv')
## load some data
files <- list.files('./Data/', pattern = '*.Euler.csv')
## load some data
files <- list.files('./Data/', pattern = '*.Euler.csv')
myMergedData <-
do.call(rbind,
lapply(list.files('./Data/', pattern = '*.Euler.csv'), read.csv))
myMergedData <-
do.call(rbind,
lapply(paste('./Data/',list.files('./Data/', pattern = '*.Euler.csv'),sep=""), read.csv))
View(myMergedData)
unique(myMergedData$site)
df <-
do.call(rbind,
lapply(paste('./Data/',list.files('./Data/', pattern = '*.Euler.csv'),sep=""), read.csv))
df2 <- melt(df, id.vars = c("eid","site"))
df <- melt(df, id.vars = c("eid","site"))
ggplot(data = df, aes(y = value, x = site, fill = site)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = value), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Sex") +
ylab("Age") +
coord_flip() +
theme_cowplot() +
facet_wrap(~variable)
ggplot(data = df, aes(y = value, x = site, fill = site)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = value), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Site") +
ylab("Euler Index") +
coord_flip() +
theme_cowplot() +
facet_wrap(~variable)
lm(value ~ site + variable, data = df)
summary(lm(value ~ site + variable, data = df))
pdf('./Figures/Euler_by_site.pdf', height = 6, width = 7)
ggplot(data = df, aes(y = value, x = site, fill = site)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = value), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Site") +
ylab("Euler Index") +
coord_flip() +
theme_cowplot() +
facet_wrap(~variable)
dev.off()
pdf('./Figures/Euler_by_site.pdf', height = 6, width = 9)
ggplot(data = df, aes(y = value, x = site, fill = site)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8) +
geom_point(aes(y = value), position = position_jitter(width = .15),
size = 1.5, alpha = 0.8) +
geom_boxplot(width = .1, guides = FALSE, outlier.shape = NA, alpha = 0.5) +
expand_limits(x = 1.5) +
guides(fill = FALSE) +
guides(color = FALSE) +
xlab("Site") +
ylab("Euler Index") +
coord_flip() +
theme_cowplot() +
facet_wrap(~variable)
dev.off()
df <- read.csv('~/Downloads/data-2019-10-24T12_15_57.565Z.csv')
names(df)
getwd()
write.table(file = './Data/vars.txt',names(df))
